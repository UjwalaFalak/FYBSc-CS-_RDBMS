Movie (m_name varchar (25), release_year integer, budget money)
Actor (a_name varchar(30), role varchar(30), charges money, a_address varchar(30) )
Movie and actors are related with many to many relationships.

Q 2) A Create the above database in PostGreSQL and insert sufficient records.

createdb slip4;
psql slip4;

create table Movie (m_name varchar(25) PRIMARY KEY,Release_year int,Budget
Money);
CREATE TABLE
movie_actor=# \d movie

create table actor (a_name varchar(20) PRIMARY KEY,role varchar(20) not null,charges Money,a_address varchar(20));
CREATE TABLE
movie_actor=# \d actor


create table movie_actor(m_name varchar(20)references movie(m_name)on delete cascade on update cascade,a_name varchar(15)references actor(a_name)on delete cascade on update cascade,primary key(m_name,a_name));
CREATE TABLE
movie_actor=# \d movie_actor
movie_actor=# insert into movie values ('tubelight',2015,5000000);
INSERT 0 1
movie_actor=# insert into movie values ('krish',2016,2000000);
INSERT 0 1
movie_actor=# insert into movie values ('fan',2019,9000000);
INSERT 0 1
movie_actor=# insert into movie values ('don',2013,10000000);
INSERT 0 1
movie_actor=# insert into movie values ('titanic',2011,10000000);
INSERT 0 1


movie_actor=# select * from movie
movie_actor-# ;
movie_actor=# insert into actor values ('srk','lead_hero', 10000000,'mumbai');
INSERT 0 1
movie_actor=# insert into actor values ('salman','lead_hero', 90000000,'pune');
INSERT 0 1
movie_actor=# insert into actor values ('sushant','supportive',
200000000,'moon');
INSERT 0 1
movie_actor=# insert into actor values ('alia','supportive', 300000000,'delhi');
INSERT 0 1
movie_actor=# insert into actor values ('sonu','lead_villan',
600000000,'rajkot');
INSERT 0 1
movie_actor=# select * from actor;


movie_actor=# insert into movie_actor values ('tubelight','salman');
INSERT 0 1
movie_actor=# insert into movie_actor values ('don','srk');
INSERT 0 1
movie_actor=# insert into movie_actor values ('fan','srk');
INSERT 0 1
movie_actor=# insert into movie_actor values ('titanic','alia');
INSERT 0 1
movie_actor=# insert into movie_actor values ('krish','sonu');
INSERT 0 1
movie_actor=#
movie_actor=# select * from movie_actor;

*********************************************************************************************
i. Write a function which will accept the movie name as input and prints its release year and budget.
Create or replace function m_fun(text) returns text as’
declare
r movie%rowtype;
begin
select ryear,budget into r from movie where m_name=$1;
raise notice ‘‘% % ‘’,r.ryear,r.budget;
return null;
end;’
language ‘plpgsql’;
******************************************************************************************************
ii. Write a function using cursor, which will accept the actor name and print the names of all movies in which that actor has acted.
Create or replace function c_fun(text) returns text as’
declare
Mnm text;
C1 cursor for select m_name from movie,actor where actor.ano=m_a=ano and movie.mno=m_a.mno and aname=$1;
begin
Open c1;
Loop
fetch c1 into mnm
Raise notice ‘’% ‘’,mnm;
Exit when not found;
End loop;
Close c1;
Return null;
End;’
Language ‘plpgsql’;

********************************************************************************************************


iii. Write a trigger which will be executed whenever an actor is deleted from the actor table, display appropriate messages.

Create or replace function f_t() returns opaque as’
Begin
Raise exception’’Record is detected’’;
End;’
Language ‘plpgsql’;


Create trigger tri
Before delete on actor 
For each row
Execute procedure f_t();
